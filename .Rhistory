show.legend = FALSE, stat = "identity") + scale_y_reverse() +
scale_x_dendrogram(hclust=hclust_dist, position="bottom")
ggplot() + theme_bw() +
geom_bar(data = df2,
aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + scale_y_reverse() +
scale_x_dendrogram(hclust=hclust_dist, position="bottom")
ggplot() + theme_bw() +
geom_bar(data = df2,
aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + scale_y_reverse() +
scale_x_dendrogram(hclust=hclust_dist, position="bottom")
head(df2)
ggplot() + theme_bw() +
geom_bar(data = df2,
aes(x = sample.ID, y = abundance, fill = col,  group = col),
color = "black", linewidth = 0.1, position = position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + scale_y_reverse() +
scale_x_dendrogram(hclust=hclust_dist, position="bottom")
ggplot() + theme_bw() +
geom_bar(data = df2,
aes(x = sample.ID, y = abundance, fill = seq.ID,  group = abundance),
color = "black", linewidth = 0.1, position = position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + scale_y_reverse() +
scale_x_dendrogram(hclust=hclust_dist, position="bottom") +
scale_fill_identity()
ggplot() + theme_bw() +
geom_bar(data = df2,
aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + scale_y_reverse() +
scale_x_dendrogram(hclust=hclust_dist, position="bottom") +
scale_fill_identity()
ggplot() + theme_bw() +
geom_bar(data = df2,
aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + scale_y_reverse() +
scale_x_dendrogram(hclust=hclust_dist, position="bottom") +
scale_fill_identity()
ggplot() + theme_bw() +
xlab("") +
geom_bar(data = df2,
aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + scale_y_reverse() +
scale_x_dendrogram(hclust=hclust_dist, position="bottom") +
scale_fill_identity()
ggplot() + theme_bw() +
xlab("") +
geom_bar(data = df2,
aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + scale_y_reverse() +
scale_x_dendrogram(hclust=hclust_dist, position="top") +
scale_fill_identity()
ggplot() + theme_bw() +
xlab("") +
geom_bar(data = df2,
aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + scale_y_reverse() +
scale_x_dendrogram(hclust=hclust_dist, position="bottom") +
scale_fill_identity()
ggplot() + theme_bw() +
xlab("") +
geom_bar(data = df2,
aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + scale_y_reverse() +
scale_x_dendrogram(hclust=hclust_dist, position="bottom") +
scale_fill_identity() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot() + theme_bw() +
xlab("") +
geom_bar(data = df2,
aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + scale_y_reverse() +
scale_x_dendrogram(hclust=hclust_dist, position="bottom") +
scale_x_discrete(name = "Primary x-axis",
sec.axis = sec_axis(~ ., name = "Secondary x-axis")) +
scale_fill_identity() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot() + theme_bw() +
xlab("") +
geom_bar(data = df2,
aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + scale_y_reverse() +
#scale_x_dendrogram(hclust=hclust_dist, position="bottom") +
scale_x_discrete(name = "Primary x-axis",
sec.axis = sec_axis(~ ., name = "Secondary x-axis")) +
scale_fill_identity() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
df <- tibble(
x = c("A", "B", "C", "D"),
y = c(4, 3, 2, 1),
color = c("#FF0000", "#00FF00", "#0000FF", "#FFFF00")
)
# Plot with identical primary and secondary x-axes for categorical data
ggplot(df, aes(x, y, fill = color)) +
geom_col() +
scale_fill_identity() +
scale_x_discrete(name = "Primary x-axis",
sec.axis = sec_axis(~ ., name = "Secondary x-axis"))
extract_seqs_long
?rename
?hclust
?position
?position_fill
plot_seqs_dendro <- function(folder, type="relative", dist="bray"){}
df <- symportalfunctions::extract_seqs_long(folder)
plot_seqs_dendro <- function(folder, type="relative", dist="bray"){
df <- symportalfunctions::extract_seqs_long(folder)
cols <- symportalfunctions::extract_plot_colors(folder_path) |>
as.data.frame() |>
dplyr::rename("col"=1) |>
tibble::rownames_to_column("seq.ID")
df2 <- dplyr::left_join(df, cols)
dist_data <- df |>
dplyr::select(sample.ID, seq.ID, abundance) |>
todyer::pivot_wider(names_from = sample.ID, values_from = abundance,  values_fill = 0) |>
tibble::column_to_rownames("seq.ID") |>
t()
hclust_dist <- dist_data |>
vegan::vegdist(dist) |>
stats::hclust()
plot <- ggplot::ggplot() + ggplot::theme_bw() +
ggplot::xlab("") +
ggplot::geom_bar(data = df2,
ggplot::aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = ggplot::position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + ggplot::scale_y_reverse() +
ggh4x::scale_x_dendrogram(hclust=hclust_dist, position="bottom") +
ggplot::scale_fill_identity() + ggplot::theme(axis.text.x = ggplot::element_text(angle = 90, vjust = 0.5, hjust=1))
return(plot)
}
plot_seqs_dendro(folder_path)
dist_data <- df |>
dplyr::select(sample.ID, seq.ID, abundance) |>
tidyer::pivot_wider(names_from = sample.ID, values_from = abundance,  values_fill = 0) |>
tibble::column_to_rownames("seq.ID") |>
t()
plot_seqs_dendro <- function(folder, type="relative", dist="bray"){
df <- symportalfunctions::extract_seqs_long(folder)
cols <- symportalfunctions::extract_plot_colors(folder_path) |>
as.data.frame() |>
dplyr::rename("col"=1) |>
tibble::rownames_to_column("seq.ID")
df2 <- dplyr::left_join(df, cols)
dist_data <- df |>
dplyr::select(sample.ID, seq.ID, abundance) |>
tidyer::pivot_wider(names_from = sample.ID, values_from = abundance,  values_fill = 0) |>
tibble::column_to_rownames("seq.ID") |>
t()
hclust_dist <- dist_data |>
vegan::vegdist(dist) |>
stats::hclust()
plot <- ggplot::ggplot() + ggplot::theme_bw() +
ggplot::xlab("") +
ggplot::geom_bar(data = df2,
ggplot::aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = ggplot::position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + ggplot::scale_y_reverse() +
ggh4x::scale_x_dendrogram(hclust=hclust_dist, position="bottom") +
ggplot::scale_fill_identity() + ggplot::theme(axis.text.x = ggplot::element_text(angle = 90, vjust = 0.5, hjust=1))
return(plot)
}
plot_seqs_dendro(folder_path)
plot_seqs_dendro <- function(folder, type="relative", dist="bray"){
df <- symportalfunctions::extract_seqs_long(folder)
cols <- symportalfunctions::extract_plot_colors(folder_path) |>
as.data.frame() |>
dplyr::rename("col"=1) |>
tibble::rownames_to_column("seq.ID")
df2 <- dplyr::left_join(df, cols)
dist_data <- df |>
dplyr::select(sample.ID, seq.ID, abundance) |>
tidyr::pivot_wider(names_from = sample.ID, values_from = abundance,  values_fill = 0) |>
tibble::column_to_rownames("seq.ID") |>
t()
hclust_dist <- dist_data |>
vegan::vegdist(dist) |>
stats::hclust()
plot <- ggplot::ggplot() + ggplot::theme_bw() +
ggplot::xlab("") +
ggplot::geom_bar(data = df2,
ggplot::aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = ggplot::position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + ggplot::scale_y_reverse() +
ggh4x::scale_x_dendrogram(hclust=hclust_dist, position="bottom") +
ggplot::scale_fill_identity() + ggplot::theme(axis.text.x = ggplot::element_text(angle = 90, vjust = 0.5, hjust=1))
return(plot)
}
plot_seqs_dendro(folder_path)
plot_seqs_dendro <- function(folder, type="relative", dist="bray"){
df <- symportalfunctions::extract_seqs_long(folder)
cols <- symportalfunctions::extract_plot_colors(folder_path) |>
as.data.frame() |>
dplyr::rename("col"=1) |>
tibble::rownames_to_column("seq.ID")
df2 <- dplyr::left_join(df, cols)
dist_data <- df |>
dplyr::select(sample.ID, seq.ID, abundance) |>
tidyr::pivot_wider(names_from = sample.ID, values_from = abundance,  values_fill = 0) |>
tibble::column_to_rownames("seq.ID") |>
t()
hclust_dist <- dist_data |>
vegan::vegdist(dist) |>
stats::hclust()
plot <- ggplot2::ggplot() + ggplot2::theme_bw() +
ggplot2::xlab("") +
ggplot2::geom_bar(data = df2,
ggplot2::aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = ggplot2::position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + ggplot2::scale_y_reverse() +
ggh4x::scale_x_dendrogram(hclust=hclust_dist, position="bottom") +
ggplot2::scale_fill_identity() + ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5, hjust=1))
return(plot)
}
plot_seqs_dendro(folder_path)
df <- symportalfunctions::extract_seqs_long(folder)
cols <- symportalfunctions::extract_plot_colors(folder_path) |>
as.data.frame() |>
dplyr::rename("col"=1) |>
tibble::rownames_to_column("seq.ID")
df2 <- dplyr::left_join(df, cols, by="seq.ID")
dist_data <- df |>
dplyr::select(sample.ID, seq.ID, abundance) |>
tidyr::pivot_wider(names_from = sample.ID, values_from = abundance,  values_fill = 0) |>
tibble::column_to_rownames("seq.ID") |>
t()
hclust_dist <- dist_data |>
vegan::vegdist(dist) |>
stats::hclust()
plot_seqs_dendro(folder_path)
plot_seqs_dendro <- function(folder, type="relative", dist="bray"){
df <- symportalfunctions::extract_seqs_long(folder)
cols <- symportalfunctions::extract_plot_colors(folder_path) |>
as.data.frame() |>
dplyr::rename("col"=1) |>
tibble::rownames_to_column("seq.ID")
df2 <- dplyr::left_join(df, cols, by="seq.ID")
dist_data <- df |>
dplyr::select(sample.ID, seq.ID, abundance) |>
tidyr::pivot_wider(names_from = sample.ID, values_from = abundance,  values_fill = 0) |>
tibble::column_to_rownames("seq.ID") |>
t()
hclust_dist <- dist_data |>
vegan::vegdist(dist) |>
stats::hclust()
plot <- ggplot2::ggplot() + ggplot2::theme_bw() +
ggplot2::xlab("") +
ggplot2::geom_bar(data = df2,
ggplot2::aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = ggplot2::position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + ggplot2::scale_y_reverse() +
ggh4x::scale_x_dendrogram(hclust=hclust_dist, position="bottom") +
ggplot2::scale_fill_identity() + ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5, hjust=1))
return(plot)
}
?vegdist
#' Function to plot seq.IDs per sample and hierarchical clustering of sample order with dendrogram
#'
#' @param folder location of the root Symportal output
#' @param type one of "relative" or "absolute"
#' @param dist a distance matrix method from vegan, see ?vegdist for details
#' @export
#' @return ggplot and dendrogram for seqs/samples
plot_seqs_dendro(folder_path)
plot_seqs_dendro <- function(folder, type="relative", dist="bray"){
df <- symportalfunctions::extract_seqs_long(folder)
cols <- symportalfunctions::extract_plot_colors(folder_path) |>
as.data.frame() |>
dplyr::rename("col"=1) |>
tibble::rownames_to_column("seq.ID")
df2 <- dplyr::left_join(df, cols, by="seq.ID")
dist_data <- df |>
dplyr::select(sample.ID, seq.ID, abundance) |>
tidyr::pivot_wider(names_from = sample.ID, values_from = abundance,  values_fill = 0) |>
tibble::column_to_rownames("seq.ID") |>
t()
hclust_dist <- dist_data |>
vegan::vegdist(dist) |>
stats::hclust()
plot <- ggplot2::ggplot() + ggplot2::theme_bw() +
ggplot2::xlab("") +
ggplot2::geom_bar(data = df2,
ggplot2::aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = ggplot2::position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + ggplot2::scale_y_reverse() +
ggh4x::scale_x_dendrogram(hclust=hclust_dist, position="bottom") +
ggplot2::scale_fill_identity() + ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5, hjust=1))
return(plot)
}
hclust_dist
labels(hclust_dist)
filtered_data$sample.ID
label_order <- labels(hclust_dist)
head(hclust_dist)
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
dist_data <- filtered_data %>%
select(sample.ID, seq.ID, abundance) %>%
pivot_wider(names_from = sample.ID, values_from = abundance,  values_fill = 0) %>%
column_to_rownames("seq.ID")
hclust_dist <- hclust(vegdist(dist_data, "euclidean"))
label_order <- hclust_dist$labels
filtered_data <- filtered_data %>%
mutate(sample.ID = factor(sample.ID, levels = label_order)) %>%
arrange(sample.ID)
filtered_data
filtered_data <- plot_data_new <- extract_seqs_long(folder_path, type = "absolute")
dist_data <- filtered_data %>%
select(sample.ID, seq.ID, abundance) %>%
pivot_wider(names_from = sample.ID, values_from = abundance,  values_fill = 0) %>%
column_to_rownames("seq.ID")
hclust_dist <- hclust(vegdist(dist_data, "euclidean"))
label_order <- hclust_dist$labels
filtered_data
label_order
hclust_dist <- hclust(vegdist(dist_data, "euclidean"))
label(hclust_dist)
dist_data <- filtered_data %>%
select(sample.ID, seq.ID, abundance) %>%
pivot_wider(names_from = sample.ID, values_from = abundance,  values_fill = 0) %>%
column_to_rownames("seq.ID")
dist_data
dist_data <- filtered_data %>%
select(sample.ID, seq.ID, abundance) %>%
pivot_wider(names_from = sample.ID, values_from = abundance,  values_fill = 0) %>%
column_to_rownames("seq.ID") %>%
t()
hclust_dist <- hclust(vegdist(dist_data, "euclidean"))
label_order <- label(hclust_dist)
label_order
filtered_data <- filtered_data %>%
mutate(sample.ID = factor(sample.ID, levels = label_order)) %>%
arrange(sample.ID)
filtered_data
devtools::load_all(".")
devtools::load_all(".")
seqs_viewer()
seqs_viewer()
runApp('inst/shiny-examples/seqs-viewer')
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
devtools::load_all(".")
seqs_viewer()
library(shiny)
library(tidyverse)
library(vegan)
# Sample Data
set.seed(123)
data <- tibble(
sample.ID = rep(letters[1:5], each = 3),
seq.ID = rep(1:3, 5),
abundance = sample(1:100, 15, replace = TRUE)
)
ui <- fluidPage(
plotOutput("barplot")
)
server <- function(input, output) {
# Perform hierarchical clustering
dist_data <- data |>
select(sample.ID, seq.ID, abundance) |>
pivot_wider(names_from = seq.ID, values_from = abundance,  values_fill = 0) |>
column_to_rownames("sample.ID")
hclust_dist <- hclust(vegdist(dist_data, "bray"))
label_order <- hclust_dist$labels
# Reorder data based on clustering
data_reordered <- data %>%
mutate(sample.ID = factor(sample.ID, levels = label_order)) %>%
arrange(sample.ID)
# Render Plot
output$barplot <- renderPlot({
ggplot(data_reordered, aes(x = sample.ID, y = abundance, fill = as.factor(seq.ID))) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(fill = "seq.ID")
})
}
shinyApp(ui, server)
library(shiny)
library(tidyverse)
library(vegan)
# Sample Data
set.seed(123)
data <- tibble(
sample.ID = rep(letters[1:5], each = 3),
seq.ID = rep(1:3, 5),
abundance = sample(1:100, 15, replace = TRUE)
)
ui <- fluidPage(
actionButton("toggleOrder", "Toggle Ordering (Normal/Clustered)"),
plotOutput("barplot")
)
server <- function(input, output, session) {
# Reactive value to store the current order
current_order <- reactiveVal("normal")
observeEvent(input$toggleOrder, {
if (current_order() == "normal") {
current_order("clustered")
} else {
current_order("normal")
}
})
output$barplot <- renderPlot({
if (current_order() == "normal") {
plot_data <- data
} else {
dist_data <- data |>
select(sample.ID, seq.ID, abundance) |>
pivot_wider(names_from = seq.ID, values_from = abundance, values_fill = 0) |>
column_to_rownames("sample.ID")
hclust_dist <- hclust(vegdist(dist_data, "bray"))
label_order <- hclust_dist$labels
plot_data <- data %>%
mutate(sample.ID = factor(sample.ID, levels = label_order)) %>%
arrange(sample.ID)
}
ggplot(plot_data, aes(x = sample.ID, y = abundance, fill = as.factor(seq.ID))) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(fill = "seq.ID")
})
}
shinyApp(ui, server)
library(shiny)
library(tidyverse)
library(vegan)
# Simulating a larger dataset
set.seed(123)
data <- tibble(
sample.ID = rep(1:100, each = 50),
seq.ID = rep(1:50, 100),
abundance = sample(1:1000, 5000, replace = TRUE)
)
ui <- fluidPage(
actionButton("toggleOrder", "Toggle Ordering (Normal/Clustered)"),
plotOutput("barplot")
)
server <- function(input, output, session) {
# Reactive value to store the current order
current_order <- reactiveVal("normal")
observeEvent(input$toggleOrder, {
if (current_order() == "normal") {
current_order("clustered")
} else {
current_order("normal")
}
})
output$barplot <- renderPlot({
if (current_order() == "normal") {
plot_data <- data
} else {
dist_data <- data |>
select(sample.ID, seq.ID, abundance) |>
pivot_wider(names_from = seq.ID, values_from = abundance, values_fill = 0) |>
column_to_rownames("sample.ID")
hclust_dist <- hclust(vegdist(dist_data, "bray"))
label_order <- hclust_dist$labels
plot_data <- data %>%
mutate(sample.ID = factor(sample.ID, levels = label_order)) %>%
arrange(sample.ID)
}
ggplot(plot_data, aes(x = sample.ID, y = abundance, fill = as.factor(seq.ID))) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(fill = "seq.ID") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
})
}
shinyApp(ui, server)
devtools::load_all(".")
seqs_viewer()
?abundanceType
seqs_viewer()
labels(hclust(vegdist(dist_data, "euclidean")))
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
styler:::style_selection()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
?vegdist
hclust_hellinger <- labels(hclust(vegdist(dist_data, "hellinger")))
devtools::load_all(".")
hclust_hellinger <- labels(hclust(vegdist(dist_data, "hellinger")))
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
