seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
metadata_all <- extract_metadata(folder_path)
metadata_all <- extract_metadata(folder_path)
head(metadata_all)
metadata_all <- extract_metadata(folder_path) |>
select("sample.ID", "sample_uid", "host_genus", "host_species", "collection_latitude", "collection_longitude") |>
mutate(lat=round(collection_latitude,2),
lon=round(collection_longitude,2),
lonlat=paste(lat, lon, "-")))
metadata_all <- extract_metadata(folder_path) |>
select("sample.ID", "sample_uid", "host_genus", "host_species", "collection_latitude", "collection_longitude") |>
mutate(lat=round(collection_latitude,2),
lon=round(collection_longitude,2),
lonlat=paste(lat, lon, "-"))
head(metadata_all)
metadata_all <- extract_metadata(folder_path) |>
select("sample.ID", "sample_uid", "host_genus", "host_species", "collection_latitude", "collection_longitude") |>
mutate(lat=round(collection_latitude,2),
lon=round(collection_longitude,2),
lonlat=paste0(lat, "/" lon))
metadata_all <- extract_metadata(folder_path) |>
select("sample.ID", "sample_uid", "host_genus", "host_species", "collection_latitude", "collection_longitude") |>
mutate(lat=round(collection_latitude,2),
lon=round(collection_longitude,2),
lonlat=paste0(lat, "/", lon))
head(metadata_all)
metadata_all <- extract_metadata(folder_path) |>
select("sample.ID", "sample_uid", "host_genus", "host_species", "collection_latitude", "collection_longitude") |>
mutate(lat=round(collection_latitude,2),
lon=round(collection_longitude,2),
lonlat=paste0(lat, " - ", lon))
head(metadata_all)
metadata_all <- extract_metadata(folder_path) |>
select("sample.ID", "sample_uid", "host_genus", "host_species", "collection_latitude", "collection_longitude") |>
mutate(lat=round(collection_latitude,2),
lon=round(collection_longitude,2),
lonlat=paste0(lat, " / ", lon))
head(metadata_all)
metadata_all <- extract_metadata(folder_path) |>
select("sample.ID", "sample_uid", "host_genus", "host_species", "collection_latitude", "collection_longitude") |>
mutate(lat=round(collection_latitude,2),
lon=round(collection_longitude,2),
lonlat=paste0("[",lat,"] [", lon,"]"))
head(metadata_all)
metadata_all <- extract_metadata(folder_path) |>
select(sample.ID, sample_uid, host_genus, host_species, collection_latitude, collection_longitude) |>
mutate(lat=round(collection_latitude,2),
lon=round(collection_longitude,2),
lonlat=paste0("[",lat,"] [", lon,"]")) |>
select(-lat,-lon, -collection_latitude, -collection_longitude)
head(metadata_all)
metadata_all <- extract_metadata(folder_path) |>
select(sample.ID, sample_uid, host_genus, host_species, collection_latitude, collection_longitude) |>
mutate(lat=round(collection_latitude,1),
lon=round(collection_longitude,1),
lonlat=paste0("[",lat,"] [", lon,"]")) |>
select(-lat,-lon, -collection_latitude, -collection_longitude)
head(metadata_all)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
metadata_all <- extract_seqs_long(folder_path) %>%
group_by(sample.ID) %>%
arrange(abundance) %>%
mutate(
cumulative_abundance = cumsum(abundance),
total_abundance = sum(abundance),
cumulative_percentage = cumulative_abundance / total_abundance
)
head(metadata_all)
devtools::load_all(".")
head(metadata_all)
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
seqs_viewer(folder_path)
df <- extract_seqs_long(folder_path) %>%
select(sample.ID, seq.ID, abundance) |>
pivot_wider(names_from = sample.ID, values_from = abundance, values_fill = 0) |>
column_to_rownames("seq.ID") |>
t()
df
hclust_bray <- hclust(vegdist(decostand(df,"total"), "bray"))
hclust_bray$order
rownames(hclust_bray)
hclust_bray
hclust_bray$order
updated_order_bray <- hclust_bray$order
hclust_bray_order <- hclust_bray$labels[updated_order_bray]
hclust_bray_order
df
rownames(df)
rownames(df) #pre
hclust_bray_order #post
filtered_data <- filtered_data %>%
mutate(sample.ID = factor(sample.ID, levels = hclust_bray_order)) %>%
arrange(sample.ID)
df <- df %>%
mutate(sample.ID = factor(sample.ID, levels = hclust_bray_order)) %>%
arrange(sample.ID)
head(df)
df <- extract_seqs_long(folder_path) %>%
select(sample.ID, seq.ID, abundance) |>
pivot_wider(names_from = sample.ID, values_from = abundance, values_fill = 0) |>
column_to_rownames("seq.ID") |>
t()
hclust_bray <- hclust(vegdist(decostand(df,"total"), "bray"))
updated_order_bray <- hclust_bray$order
hclust_bray_order <- hclust_bray$labels[updated_order_bray]
sews <- extract_seqs_long(folder_path)
df <- sews %>%
mutate(sample.ID = factor(sample.ID, levels = hclust_bray_order)) %>%
arrange(sample.ID)
df
devtools::load_all(".")
seqs_viewer(folder_path)
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
devtools::load_all(".")
seqs_viewer(folder_path)
ggplot(df, aes(x=dose, y=len, group=dose)) +
geom_boxplot(aes(fill=dose))
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
df <- ToothGrowth
head(df)
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
df <- ToothGrowth
head(df)
ggplot(df, aes(x=dose, y=len, group=dose)) +
geom_boxplot(aes(fill=dose))
ggplot(df, aes(x=dose, y=len, group=dose)) +
geom_boxplot(aes(fill=dose)) + facet_grid(supp ~ .)
df$supp <- "tmp"
ggplot(df, aes(x=dose, y=len, group=dose)) +
geom_boxplot(aes(fill=dose)) + facet_grid(supp ~ .)
ggplot(df, aes(x=dose, y=len, group=dose)) +
geom_boxplot(aes(fill=dose)) + facet_wrap(supp ~ .)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
library(ggplot2)
# Create a sample dataset
data <- data.frame(
x = rep(1:10, 3),
y = rep(1:10, 3) + rnorm(30),
category = rep(c("A", "B", "C"), each = 10)
)
# Create the ggplot object
p <- ggplot(data, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~ category)
# Remove background, border, and text from facet_wrap
p <- p + theme(
strip.background = element_blank(),
strip.text = element_blank()
)
# Display the plot
print(p)
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
?scale_y_reverse
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
install.packages("shinyWidgets")
devtools::load_all(".")
install.packages("shinyWidgets")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
seqs_viewer(folder_path)
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
extract_seqs_long(folder_path) %>%
group_by(sample.ID) %>%
mutate(total = sum(abundance),
relative.abundance = abundance / total * 100) %>%
ungroup()
extract_seqs_long(folder_path, type="abundance") %>%
group_by(sample.ID) %>%
mutate(total = sum(abundance),
relative.abundance = abundance / total * 100) %>%
ungroup()
extract_seqs_long(folder_path, type="absolute") %>%
group_by(sample.ID) %>%
mutate(total = sum(abundance),
relative.abundance = abundance / total * 100) %>%
ungroup()
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
devtools::load_all(".")
seqs_viewer(folder_path)
?runApp
devtools::load_all(".")
devtools::load_all(".")
seqs_viewer(folder_path)
usethis::use_version()
folder_path
seqs_viewer("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
extract_metadata()
extract_metadata
seqs_viewer("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
gapcoder <- function(x){
xSplit <- strsplit(x, "")
# indels
indels <- unique(
unlist(
lapply(xSplit, function(i){
ix <- which(i == "-")
g <- c(0, cumsum(diff(ix) > 1))
split(ix, g)
}),  recursive = FALSE))
# sort by position
indels <- indels[order(sapply(indels, `[`, 1), lengths(indels))]
names(indels) <- paste0("indel_", seq(length(indels)))
# return binary
t(
sapply(xSplit, function(i){
sapply(indels, function(j){
!all(i[ j ] == "-")
})
}) * 1
)
}
# example data
x1 <- c("CATG----ACAGAGCGACCCGCG--CACGTTACAAACACTACGCGGGGTGGCCCCGG",
"CATGCCCGACAGAGCGACCCGCGAACACGTTACAAACACTACG---GGTGGCCCCGG")
x2 <- c("CATG----ACAGAGCGACCCGCG--CACGTTACAAACACTACGCGGGGTGGCCCCGG",
"CATGCCCGACAGAGCGACCCGCGAACACGTTACAAACACTACG---GGTGGCCCCGG",
"CATG----ACAGA---ACCCGCG--CACGTTACAAACACTACGCGGGGTGGCCCCGG")
# test
gapcoder(x1)
# test
gapcoder(x2)
devtools::load_all(".")
library(stringi)
seq <- 'ATC----GCTGTA--A-----T'
matches <- stri_locate_all_regex(seq, '-+')[[1]]
cat('Number of gaps =', nrow(matches), '\n\n')
for (region_number in 1:nrow(matches)) {
cat('Index Position of Gap region', region_number, '=', matches[region_number, 1] - 1, 'to', matches[region_number, 2] - 1, '\n')
cat('Length of Gap region', region_number, '=', matches[region_number, 2] - matches[region_number, 1] + 1, '\n\n')
}
args <- commandArgs(trailingOnly = TRUE)
infile <- character()
outputName <- NULL
phylip <- FALSE
nexus <- FALSE
xread <- FALSE
codeIndel <- TRUE
morpho <- NULL
totalChars <- NULL
part <- NULL
partSize <- NULL
partIndels <- NULL
stem <- character()
debug <- NULL
taxa <- character()
bases <- character()
add <- NULL
RAXMLpoly <- FALSE
for(k in seq_along(args)) {
arg <- args[k]
if (arg == '-i') {
if (file.exists(args[k+1])) {
infile <- c(infile, args[k+1])
} else {
stop(paste("Could not read", args[k+1]))
}
next
}
if (arg == '-n') {
outputName <- args[k+1]
next
}
if (arg == '-d') {
codeIndel <- FALSE
next
}
if (arg == '-o') {
opt <- args[k+1]
if (grepl("x", opt, ignore.case = TRUE)) {
xread <- TRUE
}
if (grepl("n", opt, ignore.case = TRUE)) {
nexus <- TRUE
}
if (grepl("p", opt, ignore.case = TRUE)) {
phylip <- TRUE
}
if (!(xread || nexus || phylip)) {
stop("You must set an output format.")
}
next
}
if (arg == '-s') {
if (nchar(args[k+1]) > 0) {
stem <- c(stem, args[k+1])
}
}
}
j <- length(stem)
aa <- logical(length(infile))
for(k in seq_along(infile)) {
file <- infile[k]
if (grepl("\\.fasta$|\\.faa$|\\.fst$|\\.fa$|\\.fas$|\\.fna$|\\.ffn$|\\.frn$", file)) {
if (length(stem) == 0) {
stem[file] <- 'sequence'
} else if (nchar(stem[j]) > 0) {
stem[file] <- stem[j]
j <- j - 1
} else {
stop("The number of character stem names does not match the number of input files. Character names will probably not make much sense.")
}
if (grepl("\\.faa$", file)) {
aa[k] <- TRUE
} else {
aa[k] <- FALSE
}
} else {
aa[k] <- FALSE
}
}
stem <- NULL
infile
tmp <- extract_fasta(folder_input)
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
tmp <- extract_fasta(folder_input)
tmp <- extract_fasta(folder_path)
tmp
library(chopper)
fas2phy(tmp, format = "sequential")
?fas2phy
fas2phy(tmp)
class(tmp)
extract_fasta
file_list <- list.files(path = paste0(folder_path,"/post_med_seqs/"), pattern = "seqs.fasta", include.dirs = TRUE, recursive = TRUE)
file_list
paste0(folder_path, "/post_med_seqs/", file_list)
actualfasta <- paste0(folder_path, "/post_med_seqs/", file_list)
actualfasta
fas2phy(actualfasta)
read.fasta.(actualfasta)
phylotools::read.fasta(actualfasta)
tmp <- phylotools::read.fasta(actualfasta)
dat2phylip(tmp, outfile = "out.phy")
phylotools::dat2phylip(tmp, outfile = "out.phy")
