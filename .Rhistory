library(tidyverse)
library(ggplot2)
library(plotly)
ui <- fluidPage(
shinyDirButton("dir", "Select Data Folder", "Please select a folder", FALSE),
selectInput("seqID", "Choose seq.ID:", choices = NULL, selected = "ALL", multiple = TRUE),
radioButtons("abundanceType", "Abundance Type:", choices = c("Absolute", "Relative"), selected = "Absolute"),
textInput("seqIDPattern", "Seq.ID Pattern:", value = ""),
plotlyOutput("plotUI")
)
server <- function(input, output, session) {
shinyDir <- reactiveVal()
folder_data <- reactiveVal()
observe({
shinyDirChoose(input, 'dir', roots=c(wd='.'), session=session)
if (!is.null(input$dir)) {
shinyDir(parseDirPath(c(wd='.'), input$dir))
folder_path <- shinyDir()
plot_data <- extract_seqs_long(folder=folder_path, type="relative", clade="C")
updateSelectInput(session, "seqID", choices = c("ALL", unique(plot_data$seq.ID)))
colour.seqs <- extract_plot_colors(folder_path)
its2.type.names <- extract_its2_names(folder_path)
folder_data(list(plot_data = plot_data, colour_seqs = colour.seqs, its2_type_names = its2.type.names))
}
})
output$plotUI <- renderPlotly({
data_list <- folder_data()
if (is.null(data_list)) return()
plot_data <- data_list$plot_data
colour.seqs <- data_list$colour_seqs
its2.type.names <- data_list$its2_type_names
filtered_data <- plot_data
if ("ALL" %in% input$seqID) {
filtered_data <- plot_data
} else {
filtered_data <- plot_data %>% filter(seq.ID %in% input$seqID)
}
if (nchar(input$seqIDPattern) > 0) {
pattern_filtered_data <- plot_data %>% filter(grepl(input$seqIDPattern, seq.ID))
filtered_data <- dplyr::bind_rows(filtered_data, pattern_filtered_data)
}
p <- ggplot() + theme_bw()
if (input$abundanceType == "Relative") {
p <- p + geom_bar(data=filtered_data, aes(fill=seq.ID, y=abundance, x=sample.ID), color="black", linewidth=0.1,
position = position_fill(reverse = TRUE), show.legend=FALSE, stat="identity")
} else {
p <- p + geom_bar(data=filtered_data, aes(fill=seq.ID, y=abundance, x=sample.ID), color="black", linewidth=0.1,
show.legend=FALSE, stat="identity")
}
p <- p + theme(legend.position = "bottom", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colour.seqs) +
geom_text(data=its2.type.names, aes(x=sample_name, y=ifelse(input$abundanceType == "Relative", 1.5, max(filtered_data$abundance)), label=UID), size=2, angle=90)
ggplotly(p)
})
}
shinyApp(ui = ui, server = server)
tmp
styler:::style_selection()
?textInput
plot_data <- extract_seqs_long(folder="/Users/rof011/symbiodinium/20220919T102058_esampayo", type="absolute")
library(symportalfunctions)
library(tidyverse)
library(ggplot2)
library(ggridges)
library(plotly)
library(flexdashboard)
library(shiny)
plot_data <- extract_seqs_long(folder="/Users/rof011/symbiodinium/20220919T102058_esampayo", type="absolute")
plot_data
colour.seqs <- extract_plot_colors("/Users/rof011/symbiodinium/20220919T102058_esampayo")
its2.type.names <- extract_its2_names("/Users/rof011/symbiodinium/20220919T102058_esampayo")
geom_bar(data=plot_data, aes(fill=seq.ID, y=abundance, x=sample.ID), color="black", linewidth=0.1,
position = position_fill(reverse = TRUE), show.legend=FALSE, stat="identity")
geom_bar(data=plot_data, aes(fill=seq.ID, y=abundance, x=sample.ID), color="black", linewidth=0.1,
position = position_fill(reverse = TRUE), show.legend=FALSE, stat="identity")
ggplot() + theme_bw() + geom_bar(data=plot_data, aes(fill=seq.ID, y=abundance, x=sample.ID), color="black", linewidth=0.1,
position = position_fill(reverse = TRUE), show.legend=FALSE, stat="identity")
ggplot() + theme_bw() + geom_bar(data=filtered_data, aes(fill=seq.ID, y=abundance, x=sample.ID), color="black", linewidth=0.1,
show.legend=FALSE, stat="identity")
ggplot() + theme_bw() + geom_bar(data=plot_data, aes(fill=seq.ID, y=abundance, x=sample.ID), color="black", linewidth=0.1,
show.legend=FALSE, stat="identity")
plot_data <- extract_seqs_long(folder="/Users/rof011/symbiodinium/20220919T102058_esampayo", type="absolute")
plot_data
ggplot() + theme_bw() + geom_bar(data=plot_data, aes(fill=seq.ID, y=abundance, x=sample.ID), color="black", linewidth=0.1,
show.legend=FALSE, stat="identity")
plot_data
filtered_data <- plot_data
filtered_data <- filtered_data %>% group_by(sample.ID) %>%
filter(abundance >= input$0)
filtered_data <- filtered_data %>% group_by(sample.ID) %>%
filter(abundance >= 0)
filtered_data
p <- ggplot() + theme_bw()
geom_bar(data=filtered_data, aes(fill=seq.ID, y=abundance, x=sample.ID), color="black", linewidth=0.1,
position = position_fill(reverse = TRUE), show.legend=FALSE, stat="identity")
p + geom_bar(data=filtered_data, aes(fill=seq.ID, y=abundance, x=sample.ID), color="black", linewidth=0.1,
position = position_fill(reverse = TRUE), show.legend=FALSE, stat="identity")
p + geom_bar(data=filtered_data, aes(fill=seq.ID, y=abundance, x=sample.ID), color="black", linewidth=0.1,
show.legend=FALSE, stat="identity")
p + theme(legend.position = "bottom", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colour.seqs)  + ylim(0,1)
p <- p + geom_bar(data=filtered_data, aes(fill=seq.ID, y=abundance, x=sample.ID), color="black", linewidth=0.1,
show.legend=FALSE, stat="identity")
p + theme(legend.position = "bottom", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colour.seqs)  + ylim(0,1)
p + theme(legend.position = "bottom", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colour.seqs)
---
title: "Themed dashboard"
styler:::style_selection()
bs-theme-preview.R
---
title: "seqsytime - a visual viewer for symportal datasets"
styler:::style_selection()
getwd()
library(shinyFiles)
library(shinyFiles)
?shinyFileChoose
plot_data
select_folder <- "/Users/rof011/symbiodinium/20220919T102058_esampayo"
plot_data2 <- extract_seqs_long(select_folder, type="absolute")
head(plot_data2)
?actionButton
getwd()
reactivePlot
reactivePlot()
# Folder path and file name from user input
folder_path <- "/Users/rof011/symportalfunctions"
file_name <- "test.png"
# Ensure path ends with a / if it doesn't
if(substr(folder_path, nchar(folder_path), nchar(folder_path)) != "/") {
folder_path <- paste0(folder_path, "/")
}
folder_path
# Full path to save the plot
full_path <- paste0(folder_path, file_name, ".png")
full_path
# Get the ggplot object
p <- reactivePlot()
plot_data2
plot_data2 |> group_by(sample.ID) |> arrange(abundance)
plot_data2 |> group_by(sample.ID) |> arrange(desc(abundance)
)
ordered_samples <- plot_data2 %>%
group_by(sample.ID) %>%
summarize(total_abundance = sum(abundance, na.rm = TRUE)) %>%
arrange(-total_abundance) %>%
pull(sample.ID)
# Setting the factor levels of sample.ID in filtered_data based on the order from ordered_samples
plot_data2$sample.ID <- factor(plot_data2$sample.ID, levels = ordered_samples)
ordered_samples <- plot_data2 %>%
group_by(sample.ID) %>%
summarize(total_abundance = sum(abundance, na.rm = TRUE)) %>%
arrange(-total_abundance) %>%
pull(sample.ID)
# Setting the factor levels of sample.ID in filtered_data based on the order from ordered_samples
plot_data2$sample.ID <- factor(plot_data2$sample.ID, levels = ordered_samples)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
color="black", linewidth=0.1, position = position_fill(reverse = TRUE),
show.legend=FALSE, stat="identity")
select_folder <- "/Users/rof011/symbiodinium/20220919T102058_esampayo"
plot_data2 <- extract_seqs_long(select_folder, type="absolute")
ordered_samples <- plot_data2 %>%
group_by(sample.ID) %>%
summarize(total_abundance = sum(abundance, na.rm = TRUE)) %>%
arrange(-total_abundance) %>%
pull(sample.ID)
# Setting the factor levels of sample.ID in filtered_data based on the order from ordered_samples
plot_data2$sample.ID <- factor(plot_data2$sample.ID, levels = ordered_samples)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
color="black", linewidth=0.1, position = position_fill(reverse = TRUE),
show.legend=FALSE, stat="identity")
ordered_samples
ordered_samples <- plot_data2 %>%
group_by(sample.ID) %>%
summarize(total_abundance = sum(abundance, na.rm = TRUE))
ordered_samples
ordered_samples <- plot_data2 %>%
group_by(sample.ID) %>%
summarize(total_abundance = sum(abundance, na.rm = TRUE)) %>%
arrange(-total_abundance) %>%
pull(sample.ID)
# Creating the arranged_data
arranged_data <- plot_data2 %>%
group_by(sample.ID) %>%
arrange(desc(abundance)) %>%
mutate(ordered_seq.ID = factor(seq.ID, levels = unique(seq.ID))) %>%
ungroup()
# Setting the factor levels of sample.ID in filtered_data based on the order from ordered_samples
arranged_data$sample.ID <- factor(arranged_data$sample.ID, levels = ordered_samples)
ggplot() + theme_bw() + geom_bar(data=arranged_data, aes(fill=seq.ID, y=abundance, x=sample.ID),
color="black", linewidth=0.1, position = position_fill(reverse = TRUE),
show.legend=FALSE, stat="identity")
library(tidytext)
install.packages("tidytext")
ggplot() + theme_bw() + geom_bar(data=arranged_data, aes(fill=seq.ID, y=abundance, x=sample.ID),
color="black", linewidth=0.1, position = position_fill(reverse = TRUE),
show.legend=FALSE, stat="identity")
plot_data2 <- extract_seqs_long(select_folder, type="absolute")
ordered_data <- plot_data2 %>%
group_by(sample.ID) %>%
arrange(abundance) %>%
mutate(seq.ID = factor(seq.ID, unique(seq.ID)))
# Update the main data frame with the new factor levels
plot_data2$seq.ID <- factor(plot_data2$seq.ID, levels = unique(ordered_data$seq.ID))
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
color="black", linewidth=0.1, position = position_fill(reverse = TRUE),
show.legend=FALSE, stat="identity")
plot_data2$Sequence <- reorder(plot_data2$Sequence, plot_data2$Abundance)
plot_data2$seq.ID <- reorder(plot_data2$seq.ID, plot_data2$abundance)
plot_data2$seq.ID <- reorder(plot_data2$seq.ID, plot_data2$abundance)
plot_data2$seq.ID <- factor(plot_data2$seq.ID, levels=rev(levels(plot_data2$seq.ID)))
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
color="black", linewidth=0.1, position = position_fill(reverse = TRUE),
show.legend=FALSE, stat="identity")
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
stat='identity') +
opts(legend.position="none")
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
stat='identity', show.legend=FALSE)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
position = position_fill(reverse = TRUE),
stat='identity', show.legend=FALSE)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
color="black", linewidth=0.1, position = position_fill(reverse = TRUE),
show.legend=FALSE, stat="identity")
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
position = position_fill(reverse = TRUE),
color="black", linewidth=0.1,
stat='identity', show.legend=FALSE)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
# position = position_fill(reverse = TRUE),
color="black", linewidth=0.1,
stat='identity', show.legend=FALSE)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
position = position_fill(reverse = TRUE),
stat='identity', show.legend=FALSE)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
position = position_fill(reverse = TRUE),
stat='identity', show.legend=FALSE)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
position = position_fill(reverse = TRUE),
stat='identity', show.legend=FALSE)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
position = position_fill(reverse = TRUE), color="black",
stat='identity', show.legend=FALSE)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
position = position_fill(reverse = TRUE), color="black", linewidth=0.2,
stat='identity', show.legend=FALSE)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
position = position_fill(reverse = TRUE), color="darkgrey", linewidth=0.2,
stat='identity', show.legend=FALSE)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
position = position_fill(reverse = TRUE), color="black", linewidth=0.2,
stat='identity', show.legend=FALSE)
plot_data2$seq.ID <- reorder(plot_data2$seq.ID, plot_data2$abundance)
plot_data2$seq.ID <- factor(plot_data2$seq.ID, levels=rev(levels(plot_data2$seq.ID)))
select_folder <- "/Users/rof011/symbiodinium/20220919T102058_esampayo"
plot_data2 <- extract_seqs_long(select_folder, type="absolute")
ordered_data <- plot_data2 %>%
group_by(sample.ID) %>%
arrange(abundance) %>%
mutate(seq.ID = factor(seq.ID, unique(seq.ID)))
# Update the main data frame with the new factor levels
plot_data2$seq.ID <- factor(plot_data2$seq.ID, levels = unique(ordered_data$seq.ID))
plot_data2$seq.ID <- reorder(plot_data2$seq.ID, plot_data2$abundance)
plot_data2$seq.ID <- factor(plot_data2$seq.ID, levels=rev(levels(plot_data2$seq.ID)))
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
position = position_fill(reverse = TRUE), color="black", linewidth=0.2,
stat='identity', show.legend=FALSE)
select_folder <- "/Users/rof011/symbiodinium/20220919T102058_esampayo"
plot_data2 <- extract_seqs_long(select_folder, type="absolute")
ordered_data <- plot_data2 %>%
group_by(sample.ID) %>%
arrange(abundance) %>%
mutate(seq.ID = factor(seq.ID, unique(seq.ID)))
select_folder <- "/Users/rof011/symbiodinium/20220919T102058_esampayo"
plot_data2 <- extract_seqs_long(select_folder, type="absolute")
plot_data2$seq.ID <- reorder(plot_data2$seq.ID, plot_data2$abundance)
plot_data2$seq.ID <- factor(plot_data2$seq.ID, levels=rev(levels(plot_data2$seq.ID)))
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
position = position_fill(reverse = TRUE), color="black", linewidth=0.2,
stat='identity', show.legend=FALSE)
select_folder <- "/Users/rof011/symbiodinium/20220919T102058_esampayo"
plot_data2 <- extract_seqs_long(select_folder, type="absolute")
plot_data2
plot_data2 <- extract_seqs_long(select_folder, type="absolute") |>
mutate(sample.ID = as.factor(sample.ID)) |>
mutate(seq.ID = as.factor(seq.ID))
plot_data2
levels(plot_data2$seq.ID)
plot_data2$seq.ID <- reorder(plot_data2$seq.ID, plot_data2$abundance)
plot_data2$seq.ID <- factor(plot_data2$seq.ID, levels=rev(levels(plot_data2$seq.ID)))
levels(plot_data2$seq.ID)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
position = position_fill(reverse = TRUE), color="black", linewidth=0.2,
stat='identity', show.legend=FALSE)
select_folder <- "/Users/rof011/symbiodinium/20220919T102058_esampayo"
plot_data2 <- extract_seqs_long(select_folder, type="absolute") |>
mutate(sample.ID = as.factor(sample.ID)) |>
mutate(seq.ID = as.factor(seq.ID))
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID),
group=Abundance,
position = position_fill(reverse = TRUE), color="black", linewidth=0.2,
stat='identity', show.legend=FALSE)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID,   group=Abundance),
position = position_fill(reverse = TRUE), color="black", linewidth=0.2,
stat='identity', show.legend=FALSE)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID, group=abundance),
position = position_fill(reverse = TRUE), color="black", linewidth=0.2,
stat='identity', show.legend=FALSE)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID, group=sample.ID),
position = position_fill(reverse = TRUE), color="black", linewidth=0.2,
stat='identity', show.legend=FALSE)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID, group=seq.ID),
position = position_fill(reverse = TRUE), color="black", linewidth=0.2,
stat='identity', show.legend=FALSE)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID, group=abundance),
position = position_fill(reverse = TRUE), color="black", linewidth=0.2,
stat='identity', show.legend=FALSE)
plot_data2$seq.ID <- reorder(plot_data2$seq.ID, plot_data2$abundance)
plot_data2$seq.ID <- factor(plot_data2$seq.ID, levels=rev(levels(plot_data2$seq.ID)))
levels(plot_data2$seq.ID)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID, group=abundance),
position = position_fill(reverse = TRUE), color="black", linewidth=0.2,
stat='identity', show.legend=FALSE)
select_folder <- "/Users/rof011/symbiodinium/20220919T102058_esampayo"
plot_data2 <- extract_seqs_long(select_folder, type="absolute") |>
mutate(sample.ID = as.factor(sample.ID)) |>
mutate(seq.ID = as.factor(seq.ID))
levels(plot_data2$seq.ID)
#plot_data2$seq.ID <- reorder(plot_data2$seq.ID, plot_data2$abundance)
#plot_data2$seq.ID <- factor(plot_data2$seq.ID, levels=rev(levels(plot_data2$seq.ID)))
levels(plot_data2$seq.ID)
ggplot() + theme_bw() + geom_bar(data=plot_data2, aes(fill=seq.ID, y=abundance, x=sample.ID, group=abundance),
position = position_fill(reverse = TRUE), color="black", linewidth=0.2,
stat='identity', show.legend=FALSE)
git config --global user.email "george.roff@csiro.au"
credentials::set_github_pat("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")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
devtools::install_github("jennahamlin/tinselR@release-V0.0.0.90")
library(tinselR)
check()
library(devtools)
check()
check()
check()
check()
check()
document()
test()
test()
use_package(type = "imports")
use_gpl3_license()
load_all()
check()
check()
install.packages("lattice")
library(tidyverse)
library(ggplot2)
library(devtools)
library(symportalfunctions)
library(lattice)
check()
check()
document()
check()
?pivot_wider
?separate_rows
?all_of
?reduce
?sort
?pivot_longer
doc()
document()
check()
?row_number
document()
check()
check()
?use_test
check()
?vegdist
library(vegan)
?vegdist
?cascadeKM
?as.dendrogram
check()
build_articles()
library(devtools)
build_articles()
library(pkgdown)
build_articles()
check()
getwd()
check("/Users/rof011/symportalfunctions")
devtools::check()
devtools::check()
build_articles()
check(vignettes=FALSE)
devtools::check(vignettes=FALSE)
document()
devtools::check(vignettes=FALSE)
?drop_samples_str
drop_samples_str
devtools::check(vignettes=FALSE)
?str_replace
devtools::check(vignettes=FALSE)
devtools::load_all(".")
seqs()
seqs
?seqs()
symportalfunctions::seqs()
document()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
?ggplotly size
seqs_viewer()
seqs_viewer()
seqs_viewer()
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
?isolate
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
runApp('inst/shiny-examples/seqs-viewer')
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
seqs_viewer()
seqs_viewer()
styler:::style_selection()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
devtools::load_all(".")
seqs_viewer()
styler:::style_selection()
devtools::load_all(".")
seqs_viewer()
check(vignettes=FALSE)
devtools::check(vignettes=FALSE)
credentials::set_github_pat("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")
rmarkdown::render_page("vignettes/02-code-coralseed-example.Rmd")
pkgdown::render_page("vignettes/02-code-coralseed-example.Rmd")
pkgdown::render_page("coralseed", vignettes/02-code-coralseed-example.Rmd")
)
