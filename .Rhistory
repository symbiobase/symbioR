seqs <- extract_seqs_long(folder_path, drop_samples=c("04573", "0359", "1040", "0482", "0388", "0696", "0100"))
length(unique(seqs$sample.ID))
#
seqs <- extract_seqs_long(folder_path, drop_samples=seq(0,100,1))
sprintf("AU18_%04d", seq(0, 999))
# drop any samples by partial matches between "AU18_0000" to "AU18_0999"
seqs <- extract_seqs_long(folder_path, drop_samples=sprintf("AU18_%04d", seq(0, 999)))
length(unique(seqs$sample.ID))
unique(seqs$sample.ID))
unique(seqs$sample.ID)
seqs <- extract_seqs_long(folder_path)
unique(seqs$sample.ID)
# drop samples by exact vector
seqs <- extract_seqs_long(folder_path, drop_samples=c("AU18_0457", "AU18_0359", "AU18_1040", "AU18_0482", "AU18_0388", "AU18_0696", "AU18_0100"))
# drop samples by partial matches (e.g. just the numbers)
seqs <- extract_seqs_long(folder_path, drop_samples=c("0457", "0359", "1040", "0482", "0388", "0696", "0100"))
# drop any samples by partial matches between "AU18_0000" to "AU18_0999"
seqs <- extract_seqs_long(folder_path, drop_samples=sprintf("AU18_%04d", seq(0, 999)))
unique(seqs$sample.ID)
# drop samples with less than 100 abundance
seqs <- extract_seqs_long(folder_path, type="absolute") %>% filter(abundance >100)
# drop samples by name
seqs <- extract_seqs_long(folder_path, type="absolute") %>% filter(!sample.ID %in% c("AU18_0457", "AU18_0359"))
seqs %>% filter(!sample.ID %in% c("AU18_0457", "AU18_0359"))
seqs <- extract_seqs_long(folder_path, type="absolute")
seqs %>% filter(!sample.ID %in% c("AU18_0457", "AU18_0359"))
seqs
seqs %>% filter(!sample.ID %in% !grepl(c("AU18_04", sample.ID))
seqs %>% filter(!sample.ID %in% !grepl(c("AU18_04", sample.ID)))
seqs %>% filter(!sample.ID %in% c("AU18_0457", "AU18_0359"))
seqs %>% filter(!sample.ID %in% !grepl("AU18_01|AU18_02", sample.ID))
seqs %>% filter(!sample.ID %in% !grepl("AU18_01|AU18_02", sample.ID))
seqs %>% filter(!sample.ID %in% !grepl("AU18_01|AU18_04", sample.ID))
extract_its2_profile()
extract_its2_profile(folder_path)
its2_profiles <- extract_its2_profile(folder_path)
its2_profiles
unique(its2_profiles$sample.ID)
length(unique(its2_profiles$sample.ID))
seqs <- extract_seqs_long(folder_path, type="absolute") |>
filter(sample.ID %in% its2_profiles$sample.ID)
seqs
iris %>%
datatable() %>%
DT::formatStyle(columns = colnames(iris), fontSize = '25%')
iris %>%
datatable() %>%
DT::formatStyle(columns = colnames(iris), fontSize = '50%')
iris %>%
datatable() %>%
DT::formatStyle(columns = colnames(iris), fontSize = '125%')
iris %>%
datatable() %>%
DT::formatStyle(columns = colnames(.), fontSize = '125%')
iris %>%
datatable() %>%
DT::formatStyle(columns = colnames(.), fontSize = '60%')
iris %>%
datatable() %>%
DT::formatStyle(columns = colnames(.), fontSize = '4%')
devtools::load_all(".")
metadata_all <- extract_metadata(folder_path)
metadata <- extract_metadata(folder_path) %>% dplyr::select("sample.ID", "sample_uid", "host_genus", "host_species")
datatable_seqs(metadata)
devtools::load_all(".")
metadata_all <- extract_metadata(folder_path)
metadata <- extract_metadata(folder_path) %>% dplyr::select("sample.ID", "sample_uid", "host_genus", "host_species")
datatable_seqs(metadata)
datatable_seqs(metadata)
rm(datatable_seqs())
rm(datatable_seqs())
datatable_output <- DT::datatable(seqs, class = 'cell-border stripe', rownames = FALSE,
options = list(autoWidth = TRUE,  pageLength = 10)
#options = list(columnDefs = list(list(visible = FALSE, targets = 6:length(names(its2_profile_uid)) - 1)))
)
datatable_output
datatable_output %>% DT::formatStyle(columns = colnames(datatable_output), fontSize = '25%')
datatable_output %>% DT::formatStyle(columns = colnames(datatable_output), fontSize = '5%')
iris %>%
datatable() %>%
DT::formatStyle(columns = colnames(iris), fontSize = '25%')
input |> DT::datatable(class = 'cell-border stripe', rownames = FALSE,
options = list(autoWidth = TRUE,  pageLength = 10) )
seqs |> DT::datatable(class = 'cell-border stripe', rownames = FALSE,
options = list(autoWidth = TRUE,  pageLength = 10) )
seqs |> DT::datatable(class = 'cell-border stripe', rownames = FALSE,
options = list(autoWidth = TRUE,  pageLength = 10)) %>%
DT::formatStyle(columns = colnames(seqs), fontSize = '25%')
seqs |> DT::datatable(class = 'cell-border stripe', rownames = FALSE,
options = list(autoWidth = TRUE,  pageLength = 10)) %>%
DT::formatStyle(columns = colnames(seqs), fontSize = '75%')
devtools::load_all(".")
datatable_seqs(metadata)
devtools::load_all(".")
datatable_seqs(metadata)
devtools::load_all(".")
tmp <- extract_seqs(folder_path, type="absolute", clade=c("C", "D"))
tmp[1:5,1:10] # show first 5 cols, 10 rows
tmp <- extract_seqs(folder_path, type="relative", clade="C")
round(tmp[1:5,1:10],3) # show first 5 cols, 10 rows, round to 3 decimal places
tmp <- extract_seqs(folder=folder_path, type="relative", clade="C", threshold=100)
round(tmp[1:5,1:10],3) # show first 5 cols, 10 rows, round to 3 decimal places
tmp <- extract_seqs(folder=folder_path, type="relative", clade="C", threshold=100)
round(tmp[1:5,1:10],3) # show first 5 cols, 10 rows, round to 3 decimal places
tmp <- extract_seqs(folder=folder_path, type="absolute", clade="D", threshold=100)
round(tmp[1:5,1:10],3) # show first 5 cols, 10 rows, round to 3 decimal places
tmp <- extract_seqs(folder=folder_path, type="absolute", clade="D", threshold=500)
round(tmp[1:5,1:10],3) # show first 5 cols, 10 rows, round to 3 decimal places
render_site(tmp)
tmp
?extract_seqs
tmp <- extract_seqs(folder=folder_path, type="relative", drop_samples = c("OT", "H18"), silent=FALSE)
round(tmp[1:5,1:10],3) # show first 5 cols, 10 rows, round to 3 decimal places
tmp <- extract_seqs(folder=folder_path, type="relative", drop_seqs=c("X", "G"), silent=FALSE)
round(tmp[1:5,1:10],3) # show first 5 cols, 10 rows, round to 3 decimal places
tmp <- extract_seqs(folder=folder_path, type="relative", drop_seqs=c("X", "G"), drop_samples = c("OT", "H18"), silent=FALSE)
round(tmp[1:5,1:10],3) # show first 5 cols, 10 rows, round to 3 decimal places
# extract seqs
plot_data <- extract_seqs_long(folder=folder_path, type="relative", clade="C")
ggplot() + theme_bw() +
geom_bar(data=plot_data, aes(x = sample.ID, y = abundance, fill = seq.ID), color="black",
linewidth=0.2, stat = "identity", show.legend=FALSE) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
cluster.C <- extract_seqs(folder=folder_path, type="relative", clade="C", threshold=100)
library(lattice)
library(vegan)
library(tibble)
cluster.C.dist <- vegan::vegdist(cluster.C, method ="bray")
cluster.C.km <- vegan::cascadeKM(cluster.C.dist, 1, 10, iter = 5000)
cluster.C.km <- vegan::cascadeKM(cluster.C.dist, 1, 10, iter = 5000)
cluster.C.km.grps <- as.data.frame(cluster.C.km[["partition"]]) %>%
rownames_to_column(var="sample.ID")
library(dendextend)
cluster.C.km.grps <- as.data.frame(cluster.C.km[["partition"]]) %>%
rownames_to_column(var="sample.ID")
cluster.C.dend  <- as.dendrogram(hclust(cluster.C.dist, method = "complete")) %>% color_labels(., k = 6)
plot(cluster.C.dend, main="Postmed C sequences >100 seqs", ylab="Bray Curtis")
cluster.C <- extract_seqs(folder=folder_path, type="relative", clade="C", threshold=10000)
cluster.C.dist <- vegdist(cluster.C, method ="bray")
cluster.C.km <- cascadeKM(cluster.C.dist, 1, 10, iter = 5000)
render_site("rmarkdown/workflow.Rmd")
library(rmarkdown)
render_site("rmarkdown/workflow.Rmd")
render_site("rmarkdown/workflow.Rmd")
render_site("rmarkdown/workflow.Rmd")
render_site("rmarkdown/workflow.Rmd")
render_site("rmarkdown/workflow.Rmd")
render_site("rmarkdown/workflow.Rmd")
render_site("rmarkdown/workflow.Rmd")
devtools::load_all(".")
render_site("rmarkdown/workflow.Rmd")
devtools::load_all(".")
render_site("rmarkdown/workflow.Rmd")
devtools::load_all(".")
render_site("rmarkdown/workflow.Rmd")
render_site("rmarkdown/workflow.Rmd")
render_site("rmarkdown/workflow.Rmd")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
render_site("rmarkdown/workflow.Rmd")
render_site("rmarkdown/workflow.Rmd")
render_site("rmarkdown/workflow.Rmd")
devtools::load_all(".")
plot_seqs_dendro
plot_seqs_dendro(folder_path)
plot_seqs_dendro(folder_path)
plot_seqs_dendro(folder_path)
#
# ## example: plot dendrogram with KM clusters
#
# Second example: use `extract_seqs` with vegan to get dendrogram and clusters.
#
# cluster.C <- extract_seqs(folder=folder_path, type="relative", clade="C", threshold=100)
#
# library(lattice)
# library(vegan)
# library(tibble)
#
# cluster.C.dist <- vegan::vegdist(cluster.C, method ="bray")
# cluster.C.km <- vegan::cascadeKM(cluster.C.dist, 1, 10, iter = 5000)
#
# cluster.C.km.grps <- as.data.frame(cluster.C.km[["partition"]]) %>%
#   rownames_to_column(var="sample.ID")
#
# ```
#
# ```{r, fig.width=10, fig.height=5}
# library(dendextend)
#
# cluster.C.km.grps <- as.data.frame(cluster.C.km[["partition"]]) %>%
#   rownames_to_column(var="sample.ID")
#
# cluster.C.dend  <- as.dendrogram(hclust(cluster.C.dist, method = "complete")) %>% color_labels(., k = 6)
# plot(cluster.C.dend, main="Postmed C sequences >100 seqs", ylab="Bray Curtis")
plot_seqs_dendro(folder_path)
#
# ## example: plot dendrogram with KM clusters
#
# Second example: use `extract_seqs` with vegan to get dendrogram and clusters.
#
# cluster.C <- extract_seqs(folder=folder_path, type="relative", clade="C", threshold=100)
#
# library(lattice)
# library(vegan)
# library(tibble)
#
# cluster.C.dist <- vegan::vegdist(cluster.C, method ="bray")
# cluster.C.km <- vegan::cascadeKM(cluster.C.dist, 1, 10, iter = 5000)
#
# cluster.C.km.grps <- as.data.frame(cluster.C.km[["partition"]]) %>%
#   rownames_to_column(var="sample.ID")
#
# ```
#
# ```{r, fig.width=10, fig.height=5}
# library(dendextend)
#
# cluster.C.km.grps <- as.data.frame(cluster.C.km[["partition"]]) %>%
#   rownames_to_column(var="sample.ID")
#
# cluster.C.dend  <- as.dendrogram(hclust(cluster.C.dist, method = "complete")) %>% color_labels(., k = 6)
# plot(cluster.C.dend, main="Postmed C sequences >100 seqs", ylab="Bray Curtis")
plot_seqs_dendro(folder_path)
#
# ## example: plot dendrogram with KM clusters
#
# Second example: use `extract_seqs` with vegan to get dendrogram and clusters.
#
# cluster.C <- extract_seqs(folder=folder_path, type="relative", clade="C", threshold=100)
#
# library(lattice)
# library(vegan)
# library(tibble)
#
# cluster.C.dist <- vegan::vegdist(cluster.C, method ="bray")
# cluster.C.km <- vegan::cascadeKM(cluster.C.dist, 1, 10, iter = 5000)
#
# cluster.C.km.grps <- as.data.frame(cluster.C.km[["partition"]]) %>%
#   rownames_to_column(var="sample.ID")
#
# ```
#
# ```{r, fig.width=10, fig.height=5}
# library(dendextend)
#
# cluster.C.km.grps <- as.data.frame(cluster.C.km[["partition"]]) %>%
#   rownames_to_column(var="sample.ID")
#
# cluster.C.dend  <- as.dendrogram(hclust(cluster.C.dist, method = "complete")) %>% color_labels(., k = 6)
# plot(cluster.C.dend, main="Postmed C sequences >100 seqs", ylab="Bray Curtis")
plot_seqs_dendro(folder_path)
#
# ## example: plot dendrogram with KM clusters
#
# Second example: use `extract_seqs` with vegan to get dendrogram and clusters.
#
# cluster.C <- extract_seqs(folder=folder_path, type="relative", clade="C", threshold=100)
#
# library(lattice)
# library(vegan)
# library(tibble)
#
# cluster.C.dist <- vegan::vegdist(cluster.C, method ="bray")
# cluster.C.km <- vegan::cascadeKM(cluster.C.dist, 1, 10, iter = 5000)
#
# cluster.C.km.grps <- as.data.frame(cluster.C.km[["partition"]]) %>%
#   rownames_to_column(var="sample.ID")
#
# ```
#
# ```{r, fig.width=10, fig.height=5}
# library(dendextend)
#
# cluster.C.km.grps <- as.data.frame(cluster.C.km[["partition"]]) %>%
#   rownames_to_column(var="sample.ID")
#
# cluster.C.dend  <- as.dendrogram(hclust(cluster.C.dist, method = "complete")) %>% color_labels(., k = 6)
# plot(cluster.C.dend, main="Postmed C sequences >100 seqs", ylab="Bray Curtis")
?plot_seqs_dendro
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
plot_seqs_dendro(folder_path, type = "relative", dist="bray")
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
plot_seqs_dendro(folder_path, type = "relative", dist="bray")
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
plot_seqs_dendro(folder_path, type = "relative", dist="bray")
folder_path
plot_seqs_dendro(folder_path)
?extract_seqs
plot_seqs_dendro(folder_path, threshold = 2000)
devtools::load_all(".")
plot_seqs_dendro(folder_path, threshold = 2000)
plot_seqs_dendro(folder_path, threshold = 5000)
devtools::load_all(".")
plot_seqs_dendro(folder_path, type = "relative", dist="bray")
devtools::load_all(".")
plot_seqs_dendro(folder_path, threshold = 5000)
plot_seqs_dendro(folder_path, threshold = 2000)
5
plot_seqs_dendro(folder_path, threshold = 5000)
plot_seqs_dendro(folder_path, threshold = 6000)
?extract_seqs_long
plot_seqs_dendro(folder_path, clade = "D", type = "relative", dist="bray")
plot_seqs_dendro(folder_path, clade = "C", type = "relative", dist="bray")
plot_seqs_dendro(folder_path, clade = "D", type = "relative", dist="bray")
plot_seqs_dendro(folder_path, type = "abundance", dist="bray")
?extract_plot_colors
?extract_seqs_long
devtools::load_all(".")
devtools::load_all(".")
plot_seqs_dendro(folder_path, threshold = 6000)
plot_seqs_dendro(folder_path, type="relative"threshold = 6000)
plot_seqs_dendro(folder_path, type="relative", threshold = 6000)
plot_seqs_dendro(folder_path, type="abundance", threshold = 6000)
devtools::load_all(".")
plot_seqs_dendro(folder_path, type="abundance", threshold = 6000)
plot_seqs_dendro(folder_path, type="relative", threshold = 6000)
plot_seqs_dendro(folder_path, type="relative", threshold = 9000)
devtools::load_all(".")
plot_seqs_dendro(folder_path, type="relative", threshold = 9000)
plot_seqs_dendro(folder_path, type="abundance", threshold = 6000)
devtools::load_all(".")
plot_seqs_dendro(folder_path, type="abundance", threshold = 6000)
plot_seqs_dendro(folder_path, type="relative", threshold = 9000)
plot_seqs_dendro(folder_path, type="abundance", threshold = 6000)
df <- symportalfunctions::extract_seqs_long(folder_path)
df
df <- symportalfunctions::extract_seqs_long(folder_path, type="absolute")
cols <- symportalfunctions::extract_plot_colors(folder_path) |>
as.data.frame() |>
dplyr::rename("col"=1) |>
tibble::rownames_to_column("seq.ID")
df2 <- dplyr::left_join(df, cols, by="seq.ID")
ggplot2::ggplot() + ggplot2::theme_bw() +
ggplot2::xlab("") +
ggplot2::geom_bar(data = df2,
ggplot2::aes(x = sample.ID, y = abundance, fill = col, group = abundance),
color = "black", linewidth = 0.1, show.legend = FALSE, position="stack", stat = "identity") +
ggplot2::scale_fill_identity() +
ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5, hjust=1))
plot_seqs(folder_path, type="absolute")
devtools::load_all(".")
plot_seqs(folder_path, type="absolute")
df <- symportalfunctions::extract_seqs_long(folder_path, type="absolute")
cols <- symportalfunctions::extract_plot_colors(folder_path) |>
as.data.frame() |>
dplyr::rename("col"=1) |>
tibble::rownames_to_column("seq.ID")
df2 <- dplyr::left_join(df, cols, by="seq.ID")
# plot <- ggplot2::ggplot() + ggplot2::theme_bw() +
#   ggplot2::xlab("") +
#   ggplot2::geom_bar(data = df2,
#                    ggplot2::aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
#     color = "black", linewidth = 0.1, position = ggplot2::position_fill(reverse = TRUE),
#     show.legend = FALSE, stat = "identity") + ggplot2::scale_y_reverse() +
#   ggplot2::scale_fill_identity() + ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot2::ggplot() + ggplot2::theme_bw() +
ggplot2::xlab("") +
ggplot2::geom_bar(data = df2,
ggplot2::aes(x = sample.ID, y = abundance, fill = col, group = abundance),
color = "black", linewidth = 0.1, show.legend = FALSE, position="stack", stat = "identity") +
ggplot2::scale_fill_identity() +
ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5, hjust=1))
plot_seqs(folder_path, type="absolute")
devtools::load_all(".")
plot_seqs(folder_path, type="absolute")
devtools::load_all(".")
plot_seqs(folder_path, type="absolute")
plot_seqs(folder_path, type="relative")
devtools::load_all(".")
plot_seqs(folder_path, type="relative")
plot_seqs(folder_path, type="absolute")
plot_seqs_dendro(folder_path, type="absolute")
plot_seqs_dendro(folder_path, type="relative")
plot_seqs_dendro(folder_path, type="absolute")
devtools::load_all(".")
plot_seqs_dendro(folder_path, type="relative")
plot_seqs_dendro(folder_path, type="absolute")
plot_seqs_dendro(folder_path, type="relative")
plot_seqs_dendro(folder_path, type="absolute")
devtools::load_all(".")
plot_seqs_dendro(folder_path, type="absolute")
plot <- ggplot2::ggplot() + ggplot2::theme_bw() +
ggplot2::xlab("") +
ggplot2::geom_bar(data = df2,
ggplot2::aes(x = sample.ID, y = abundance, fill = col,  group = abundance),
color = "black", linewidth = 0.1, position = ggplot2::position_fill(reverse = TRUE),
show.legend = FALSE, stat = "identity") + ggplot2::scale_y_reverse() +
ggh4x::scale_x_dendrogram(hclust=hclust_dist, position="bottom") +
ggplot2::scale_fill_identity() + ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5, hjust=1))
devtools::load_all(".")
plot_seqs_dendro(folder_path, type="absolute")
plot_seqs_dendro(folder_path, type="absolute")
devtools::load_all(".")
plot_seqs_dendro(folder_path, type="absolute")
devtools::load_all(".")
plot_seqs_dendro(folder_path, type="absolute")
plot_seqs_dendro(folder_path, type="relative")
plot_seqs_dendro(folder_path, type="relative")
plot_seqs_dendro(folder_path, type="absolute")
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
plot_seqs_dendro(folder_path, type = "relative", dist="bray")
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
plot_seqs(folder_path, type = "relative", dist="bray")
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
plot_seqs(folder_path, type = "relative")
devtools::load_all(".")
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
plot_seqs(folder_path, type = "relative", dist="bray")
devtools::load_all(".")
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
plot_seqs(folder_path, type = "relative", dist="bray")
devtools::load_all(".")
devtools::load_all(".")
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
plot_seqs(folder_path, type = "relative", dist="bray")
?scale_x_dendrogram
You can pass any argument from `?extract_seqs_long` to `plot_seqs` directly to filter before plotting.
filter all seqs < 6000 reads
plot_seqs(folder_path, threshold=6000, type = "relative", dist="bray")
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
plot_seqs(folder_path, threshold=6000, type = "relative", dist="bray")
plot_seqs(folder_path, threshold=6000, type = "relative")
devtools::load_all(".")
plot_seqs(folder_path, type = "relative",  threshold=6000)
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
plot_seqs_dendro(folder_path, clade = "D", type = "relative", dist="bray")
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
plot_seqs(folder_path, type = "relative", drop_samples=sprintf("AU18_%04d", seq(0, 999)))
?dist
?vegdist
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
plot_seqs_dendro(folder_path, type = "relative", dist="euclidean")
library(symportalfunctions)
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
plot_seqs(folder_path, type = "relative")
symportalfunctions::plot_seqs(folder_path, type = "relative")
check()
devtools::check()
plot_seqs
devtools::load_all()
?plot_seqs
devtools::install()
devtools::document() e
devtools::document()
library(devtools)
document()
plot_seqs
?plot_seqs_dendro
plot_seqs_dendro
?scale_x_dendrogram
plot_seqs_dendro(folder_path, type = "relative", dist="bray") +force_panelsizes( cols = c(2, 1))
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
plot_seqs_dendro(folder_path, type = "relative", dist="bray") +force_panelsizes( cols = c(2, 1))
plot_seqs_dendro(folder_path, type = "relative", dist="bray") + ggh4x::force_panelsizes( cols = c(2, 1))
plot_seqs_dendro(folder_path, type = "relative", dist="bray") + ggh4x::force_panelsizes( cols = c(2, 2))
plot_seqs_dendro(folder_path, type = "relative", dist="bray") + ggh4x::force_panelsizes( cols = c(2, 4))
plot_seqs_dendro(folder_path, type = "relative", dist="bray") + ggh4x::force_panelsizes( rows = c(2, 4))
tmp <- plot_seqs_dendro(folder_path, type = "relative", dist="bray")
str(tmp)
devtools::load_all(".")
build_site()
build_site()
render_site()
pkgdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site(getwd())
rmarkdown::render_site("rmarkdown")
rmarkdown::render_site("rmarkdown")
devtools::load_all(".")
devtools::load_all(".")
rmarkdown::render_site("rmarkdown")
devtools::load_all(".")
rmarkdown::render_site("rmarkdown")
rmarkdown::render_site("rmarkdown")
rmarkdown::render_site("rmarkdown")
library(tidyverse)
library(ggplot2)
library(devtools)
library(symportalfunctions)
#library(lattice)
library(tidyverse)
library(ggplot2)
library(devtools)
library(symportalfunctions)
#library(lattice)
folder_path <- ("/Volumes/Macintosh HD/Users/rof011/symbiodinium/20230120T102936_esampayo")
tmp <- extract_seqs_long(folder_path, type="absolute")
datatable_seqs(tmp)
tmp <- extract_seqs_long(folder_path, type="absolute", clade=c("C", "D"))
datatable_seqs(tmp)
tmp <- extract_seqs_long(folder_path, type="relative", clade="C")
datatable_seqs(tmp)
tmp <- extract_seqs_long(folder=folder_path, type="relative", clade="C", threshold=100)
datatable_seqs(tmp)
tmp <- extract_seqs_long(folder=folder_path, type="absolute", clade="D", threshold=500)
datatable_seqs(tmp)
tmp <- extract_seqs_long(folder=folder_path, type="relative", drop_samples = c("OT", "H18"), silent=FALSE)
datatable_seqs(tmp)
tmp <- extract_seqs_long(folder=folder_path, type="relative", drop_seqs=c("X", "G"), silent=FALSE)
datatable_seqs(tmp)
tmp <- extract_seqs_long(folder=folder_path, type="relative", drop_seqs=c("X", "G"), drop_samples = c("OT", "H18"), silent=FALSE)
datatable_seqs(tmp)
rmarkdown::render_site("rmarkdown")
rmarkdown::render_site("rmarkdown")
traceback()
devtools::load_all(".")
rmarkdown::render_site("rmarkdown")
rmarkdown::render_site("rmarkdown")
rmarkdown::render_site("rmarkdown")
devtools::install_github("helske/changer")
